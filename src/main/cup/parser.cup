package parse;

import error.ErrorManager;
import java_cup.runtime.Symbol;
import java_cup.runtime.ComplexSymbolFactory.ComplexSymbol;

parser code {:
  /* override error routines */
  private Loc locOfInfo(Object info) {
     return info instanceof ComplexSymbol ?
               Loc.loc((ComplexSymbol) info) :
               info instanceof Symbol ?
                  Loc.loc((Symbol) info) :
                  Loc.loc(cur_token);
  }
  private String lexemeOfInfo(Object info) {
     return info instanceof ComplexSymbol ?
               " at '" + ((ComplexSymbol) info).getName() + "'" :
               "";

  }
  public void report_fatal_error(String message, Object info) {
     done_parsing();
     ErrorManager.em.fatal(locOfInfo(info), message + lexemeOfInfo(info) + "\nCan't recover from previous error(s), giving up.");
  }
  public void report_error(String message, Object info) {
     ErrorManager.em.error(locOfInfo(info), message + lexemeOfInfo(info));
  }
:};

terminal LITNUM;
terminal PLUS, MINUS, TIMES, DIV;
terminal LPAREN, RPAREN;

non terminal exp;
non terminal term;
non terminal factor;

start with exp;

exp ::=
  exp PLUS term
| exp MINUS term
| term
;

term ::=
| term TIMES factor
| term DIV factor
| factor
;

factor ::=
  LITNUM
| LPAREN exp RPAREN
;
